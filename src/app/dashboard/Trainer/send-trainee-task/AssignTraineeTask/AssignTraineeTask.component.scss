@import url(https://fonts.googleapis.com/css?family=Open+Sans:400|Raleway:300);


$bg-color: #eeeeee;
$max-width: 650px;

@function random-color($min: 0, $max: 255, $alpha: 1, $red: null, $green: null, $blue: null) {
    @if $min < 0 {
        $min: -1;
    } @else {
        $min: $min - 1;
    }
    @if $max > 255 {
        $max: 256;
    } @else {
        $max: $max + 1;
    }

    $range: $max - $min;
    @if not $red { $red: random($range) + $min; }
    @if not $green { $green: random($range) + $min; }
    @if not $blue { $blue: random($range) + $min; }

    @return rgba($red, $green, $blue, $alpha);
}


// ------------------------------------------------------

.length-increase{
    width: 100%;
    max-width:100%;
}
*,
*:before,
*:after {
    box-sizing: border-box;
}

html {
    font-family: 'Open Sans', Helvetica, arial, sans-serif;
    background-color: $bg-color;
}

h1,
h4 {
    text-align: center;
    // font-family: 'Raleway', 'Open Sans', sans-serif;
    color:rgb(255, 255, 255)
}

a {
    text-decoration: none;
    color: black;
}

.container {
    overflow: hidden;
    width: 100%;
    max-width: $max-width;
    margin: 0 auto;
    padding: 2rem 1rem;
}

.col {
    padding: 1rem;

    @media (min-width: $max-width) {
        width: 50%;
        float: left;

        &:nth-of-type(2n+1) {
            clear: left;
        }
    }
}

.card {
    display: block;
    text-align: center;
    color:rgb(255, 255, 255);

    .content {
        padding: 4rem 1rem;
    }

    .title {
        font-size: 1.25rem;
        background-color: gray;
        border-radius: 3px;
        padding: 0.5rem;
    }
}

@for $i from 1 through 10 {
    .card-#{$i} {
        $card-color: random-color($min: 100, $max:200);
        $card-color-light: lighten($card-color, 15%);
        $card-color-dark: darken($card-color, 15%);

        .content {
            background-color: rgb(0, 145, 255)!important;
            border-radius: 5px;
        }

        &:before,
        &:after {
            border-radius: 5px;
        }

        &:before {
            background-color: white !important;
        }

        .title,
        &:after {
            background-color: $card-color-dark !important;
        }
    }
}


// ------------------------------------------------------


$animation-timing: 0.3s;
$animation-ease: ease-in-out;
$animation-ease-bounce: cubic-bezier(0.175,  0.885, 0.320, 1.275);
[class*='stacked--'] {
    position: relative;
    transition: transform $animation-timing $animation-ease;
    will-change: transform;

    &:before,
    &:after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-color: currentColor;
        transition: transform $animation-timing $animation-ease;
        will-change: transform;
    }

    &:before {
        z-index: -1;
    }

    &:after {
        z-index: -2;
    }
}

.stacked--left {
    &:before,
    &:after {
        transform-origin: right center;
    }

    &:hover {
        transform: translate(-5px, 0);

        &:before { transform: translate(5px, 0) scale(0.95); }
        &:after { transform: translate(10px, 0) scale(0.90); }
    }
}

.stacked--right {
    &:before,
    &:after {
        transform-origin: left center;
    }

    &:hover {
        transform: translate(5px, 0);

        &:before { transform: translate(-5px, 0) scale(0.95); }
        &:after { transform: translate(-10px, 0) scale(0.90); }
    }
}

.stacked--up {
    &:before,
    &:after {
        transform-origin: center bottom;
    }

    &:hover {
        transform: translate(0, -5px);

        &:before { transform: translate(0, 5px) scale(0.95); }
        &:after { transform: translate(0, 10px) scale(0.90); }
    }
}

.stacked--down {
    &:before,
    &:after {
        transform-origin: center top;
    }

    &:hover {
        transform: translate(0, 5px);

        &:before { transform: translate(0, -5px) scale(0.95); }
        &:after { transform: translate(0, -10px) scale(0.90); }
    }
}

.stacked--up-left {
    &:hover {
        transform: translate(-5px, -5px);

        &:before { transform: translate(5px, 5px); }
        &:after { transform: translate(10px, 10px); }
    }
}

.stacked--up-right {
    &:hover {
        transform: translate(5px, -5px);

        &:before { transform: translate(-5px, 5px); }
        &:after { transform: translate(-10px, 10px); }
    }
}

.stacked--down-left {
    &:hover {
        transform: translate(-5px, 5px);

        &:before { transform: translate(5px, -5px); }
        &:after { transform: translate(10px, -10px); }
    }
}

.stacked--down-right {
    &:hover {
        transform: translate(5px, 5px);

        &:before { transform: translate(-5px, -5px); }
        &:after { transform: translate(-10px, -10px); }
    }
}

.stacked--fan-left {
    transform-origin: center bottom;

    &:before,
    &:after {
        transform-origin: center bottom;
    }

    &:hover {
        transform: translate(-2.5px, 0) rotate(-2.5deg);

        &:before { transform: translate(2.5px, 0) rotate(2.5deg); }
        &:after { transform: translate(5px, 0) rotate(5deg); }
    }
}

.stacked--fan-right {
    transform-origin: center bottom;

    &:before,
    &:after {
        transform-origin: 50% 100%;
    }

    &:hover {
        transform: translate(2.5px, 0) rotate(2.5deg);

        &:before { transform: translate(-2.5px, 0) rotate(-2.5deg); }
        &:after { transform: translate(-5px, 0) rotate(-5deg); }
    }
}


/********************************/
// Cards
/********************************/
.container {
    background-color: rgb(255, 255, 255);
    width: 100%;
  }
  .CriticalActions {
    margin: 0 -15px 15px;
    padding: 15px;
    background-color: #ffffff;
  }
  .commitment-task-cards {
    display: flex;
    flex-wrap: wrap;
  }
  .commitment-task-card {
    display: flex;
    flex-direction: column;
    flex: 1 1 0%;
    background-color: #fff;
    box-shadow: 0 6px 12px -5px #1b374f;
  }
  .commitment-task-card.complete {
    border-left: 4px solid #347ec0;
    background-color: #d2e6f6;
  }
  .commitment-task-card.complete .btn-default {
    background-color: #a9cdec;
    border-color: #80b2e0;
  }
  .commitment-task-card:not(:last-child) {
    margin-right: 15px;
  }
  .commitment-task-card-header {
    border-bottom: 1px solid #e1e3e5;
    padding: 0 15px 8px;
  }
  .commitment-task-card-title {
    margin-bottom: 0;
    font-weight: 700;
  }
  .commitment-task-due-date {
    font-size: 20px;
    color: #ef5425;
    padding: 4px 0 0;
    margin-bottom: 0;
  }
  .commitment-task-type {
    display: block;
    color: #92a83b;
    font-size: 11px;
    font-weight: 400;
    letter-spacing: .2em;
    text-transform: uppercase;
  }
  .commitment-task-card-body {
    padding: 15px;
    flex: 1 1 auto;
  }

  .commitment-task-card-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 15px;
  }

  .commitment-help-link {
    padding: 3px;
    color: #6a737b;
    font-size: .8em;
  }
  .commitment-help-link:hover {
    text-decoration: none;
  }

  .d-flex {
    display :flex;
  }

  .hide {
    display: none;
  }
  .hint {
    display: inline;
  }

  .help {
    display: inline;
    float: right;
  }
      
  .hint:hover + .hide {
    display: inline;
    min-width: 250px;
    margin-left: -125px;
    background-color: #297bff;
    color: #fff;
    text-align: center;
    border-radius: 2px;
    padding: 16px;
    position: fixed;
    z-index: 1;
    left: 50%;
    top: 20%;
    font-size: 17px;
  }

  .bui {
    background-color: #297bff;
    color: #fff;
    font-size: large;
    padding: 10px 24px;
  }
